{"ast":null,"code":"const reducer = function () {\n  let posts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"UPDATE\":\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case \"FETCH_ALL\":\n      return action.posts;\n\n    case \"CREATE\":\n      return [...posts, action.payload];\n\n    case \"DELETE\":\n      return posts.filter(post => post._id !== action.payload);\n\n    case LIKE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    default:\n      return posts;\n  }\n};\n\nexport default reducer; //action payload is the updated posts","map":{"version":3,"sources":["/Users/mathawudnopprapun/Development/mernapp/client/src/reducers/posts.js"],"names":["reducer","posts","action","type","map","post","_id","payload","filter","LIKE"],"mappings":"AACA,MAAMA,OAAO,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACtC,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,QAAL;AACC,aAAOF,KAAK,CAACG,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaJ,MAAM,CAACK,OAAP,CAAeD,GAA5B,GAAkCJ,MAAM,CAACK,OAAzC,GAAmDF,IAAvE,CAAP;;AACA,SAAK,WAAL;AACE,aAAOH,MAAM,CAACD,KAAd;;AACF,SAAK,QAAL;AACE,aAAO,CAAC,GAAGA,KAAJ,EAAWC,MAAM,CAACK,OAAlB,CAAP;;AACA,SAAK,QAAL;AACE,aAAON,KAAK,CAACO,MAAN,CAAcH,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaJ,MAAM,CAACK,OAA3C,CAAP;;AACA,SAAKE,IAAL;AACF,aAAOR,KAAK,CAACG,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaJ,MAAM,CAACK,OAAP,CAAeD,GAA5B,GAAkCJ,MAAM,CAACK,OAAzC,GAAmDF,IAAxE,CAAP;;AACF;AACE,aAAOJ,KAAP;AAZJ;AAcD,CAfD;;AAgBA,eAAeD,OAAf,C,CAGA","sourcesContent":["\nconst reducer = (posts = [], action) => {\n  switch (action.type) {\n\t  case \"UPDATE\":\n\t\t  return posts.map((post) => post._id === action.payload._id ? action.payload : post);\n    case \"FETCH_ALL\":\n      return action.posts;\n    case \"CREATE\":\n      return [...posts, action.payload];\n      case \"DELETE\":\n        return posts.filter((post) => post._id !== action.payload);\n        case LIKE:\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    default:\n      return posts;\n  }\n};\nexport default reducer\n\n\n//action payload is the updated posts"]},"metadata":{},"sourceType":"module"}